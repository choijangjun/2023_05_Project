 # DB 삭제/생성/사용
DROP DATABASE IF EXISTS SB_AM;
CREATE DATABASE SB_AM;
USE SB_AM;

# article 테이블 생성
CREATE TABLE article(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	title VARCHAR(100) NOT NULL,
	`body` TEXT NOT NULL
);

ALTER TABLE article ADD COLUMN memberId INT UNSIGNED NOT NULL AFTER updateDate;
ALTER TABLE article ADD COLUMN boardId INT UNSIGNED NOT NULL AFTER memberId;
ALTER TABLE article ADD COLUMN hitCount INT UNSIGNED NOT NULL DEFAULT 0;

CREATE TABLE event_Article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL ,
    section VARCHAR(50) NOT NULL COMMENT 'movie(영화), food(음식), dessert(디저트), fashion(패션), phoneplan(요금제)',
    goods VARCHAR(50) NOT NULL COMMENT '상품',
    needs VARCHAR(50) NOT NULL COMMENT '참여조건',
    price INT DEFAULT 0 COMMENT '가격',
    `period` VARCHAR(100) NOT NULL COMMENT '이벤트 기간',
    image VARCHAR(100) NOT NULL COMMENT '이미지 경로',
    site VARCHAR(100) NOT NULL COMMENT '사이트 경로'
);
ALTER TABLE event_Article ADD COLUMN hitCount INT UNSIGNED NOT NULL DEFAULT 0;
ALTER TABLE event_Article ADD COLUMN `name` VARCHAR(50) NOT NULL AFTER memberId;

SELECT COUNT(*) FROM event_Article;

DESC article;
DESC event_Article;

# member 테이블 생성
CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	`authLevel` SMALLINT UNSIGNED NOT NULL DEFAULT 3 COMMENT '권한 레벨 (일반 = 3, 관리자 = 7)',
	`name` VARCHAR(20) NOT NULL,
	nickname VARCHAR(20) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

# board 테이블 생성
CREATE TABLE board(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	`code` VARCHAR(20) NOT NULL UNIQUE COMMENT 'notice(공지사항), free(자유), ...',
	`name` VARCHAR(20) NOT NULL UNIQUE COMMENT '게시판 이름',
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '삭제여부 (삭제 전 = 0, 삭제 후 = 1)',
	delDate DATETIME COMMENT '삭제 날짜'
);

# reactionPoint 테이블 생성
CREATE TABLE reactionPoint(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`point` SMALLINT NOT NULL DEFAULT 0
);


# saveEventArticle 테이블 생성
CREATE TABLE saveEventArticle(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호'
);
ALTER TABLE saveEventArticle ADD COLUMN save SMALLINT NOT NULL DEFAULT 1;

# reply 테이블 생성
CREATE TABLE reply(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL COMMENT '관련 데이터 타입 코드',
    relId INT UNSIGNED NOT NULL COMMENT '관련 데이터 번호',
	`body` TEXT NOT NULL
);
# event_Article 테스트 데이터
INSERT INTO event_Article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
`name` = '메가박스',
section = 'movie',
goods = '티켓',
needs = '선착순',
price = 0,
`period` = '23_05_24 ~ 23_05_26',
image = 'https://img.megabox.co.kr/SharedImg/event/2023/05/19/ANxPzcWa88MtC7SPkVZ5BoGBoupqXW8N.jpg',
site = 'https://www.megabox.co.kr/event/detail?eventNo=13325';

# event_Article 테스트 데이터
INSERT INTO event_Article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
`name` = '무신사스토어',
section = 'fashion',
goods = '신발',
needs = '응모',
price = 1000,
`period` = '23_05_22 ~ 23_05_27',
image = 'https://image.msscdn.net/contents/images/raffles/2023/4c5e95c84b16418fa16c0a0c055d49bf.png',
site = 'https://www.musinsa.com/event/raffles?raffles_include_state=A';

# event_Article 테스트 데이터
INSERT INTO event_Article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
`name` = '베스킨라빈스',
section = 'dessert',
goods = '아이스크림',
needs = '인스타',
price = 0,
`period` = '23_05_21 ~ 23_06_26',
image = 'https://www.baskinrobbins.co.kr/upload/event/image/1743759721.jpg',
site = 'https://www.baskinrobbins.co.kr/event/list.php';

# event_Article 테스트 데이터
INSERT INTO event_Article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
`name` = '메가박스',
section = 'movie',
goods = '티켓',
needs = '선착순',
price = 0,
`period` = '23_05_24 ~ 23_05_26',
image = 'https://img.lotteeatz.com/upload/event/THUMBNAIL/2023/04/28/20230428162310267_4.jpg/dims/resize/x200/optimize',
site = 'https://www.megabox.co.kr/event/detail?eventNo=13325';

# event_Article 테스트 데이터
INSERT INTO event_Article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
`name` = '메가박스',
section = 'movie',
goods = '티켓',
needs = '선착순',
price = 0,
`period` = '23_05_24 ~ 23_05_26',
image = 'https://img.lotteeatz.com/upload/event/THUMBNAIL/2023/04/28/20230428162310267_4.jpg/dims/resize/x200/optimize',
site = 'https://www.megabox.co.kr/event/detail?eventNo=13325';

# event_Article 데이터 조회
SELECT * FROM event_Article;

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 2,
title = '제목1',
`body` = '내용1';

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 1,
boardId = 1,
title = '제목2',
`body` = '내용2';

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
boardId = 2,
title = '제목3',
`body` = '내용3';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'admin',
loginPw = 'admin',
`authLevel` = 7,
`name` = '관리자',
nickname = '관리자',
cellphoneNum = '010-1111-1111',
email = 'admin@naver.com';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test1',
loginPw = 'test1',
`name` = '유저1',
nickname = '유저1',
cellphoneNum = '010-1112-1112',
email = 'test1@naver.com';

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test2',
loginPw = 'test2',
`name` = '유저2',
nickname = '유저2',
cellphoneNum = '010-1113-1113',
email = 'test2@naver.com';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'notice',
`name` = '공지사항';

# board 테스트 데이터
INSERT INTO board
SET regDate = NOW(),
updateDate = NOW(),
`code` = 'free',
`name` = '자유';

# reactionPoint 테스트 데이터
# 2번 회원이 1번 게시물에 좋아요
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 1,
`point` = 1;

# 2번 회원이 3번 게시물에 싫어요
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 3,
`point` = -1;

# 2번 회원이 2번 게시물에 좋아요
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 2,
`point` = 1;

# 3번 회원이 1번 게시물에 싫어요
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 1,
`point` = -1;

# 3번 회원이 3번 게시물에 좋아요
INSERT INTO reactionPoint
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 3,
`point` = 1;

# 2번 회원이 1번 게시물에 댓글
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 1,
`body` = '댓글 1';

# 2번 회원이 3번 게시물에 댓글
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 2,
relTypeCode = 'article',
relId = 3,
`body` = '댓글 2';

# 3번 회원이 1번 게시물에 댓글
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 1,
`body` = '댓글 3';

# 3번 회원이 1번 게시물에 댓글
INSERT INTO reply
SET regDate = NOW(),
updateDate = NOW(),
memberId = 3,
relTypeCode = 'article',
relId = 1,
`body` = '댓글 4';

SELECT * FROM article;
SELECT * FROM `member`;
SELECT * FROM board;
SELECT * FROM reactionPoint;
SELECT * FROM reply;
DESC reactionPoint;
SELECT LAST_INSERT_ID();

/* 게시물 늘리기 쿼리
insert into article
(
    regDate, updateDate, memberId, boardId, title, `body`
)
select now(), now(), FLOOR(RAND() * 3) + 1, FLOOR(RAND() * 2) + 1, CONcat('제목_', rand()), CONCAT('내용_', RAND())
from article;
*/


DESC saveEventArticle;

TRUNCATE saveEventArticle;

SELECT * FROM saveEventArticle;

SELECT EA.*
				, IFNULL(SEA.save, 0)
			FROM event_Article AS EA
			LEFT JOIN saveEventArticle AS SEA
			ON EA.id = SEA.relId
			WHERE 1 = 1
			ORDER BY id;